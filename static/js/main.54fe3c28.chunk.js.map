{"version":3,"sources":["components/config/config.js","components/datacontainer.js","components/datarequest.js","components/displaycontainer.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","DataContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","runAnimations","bind","assertThisInitialized","resetAnimations","saveCurrentCity","testEffect","degrees","Math","round","wind","deg","TimelineMax","paused","add","TweenMax","fromTo","opacity","display","delay","ease","ExpoScaleEase","config","rotation","play","reverse","sendOrderToParent","saveAsDefault","react_default","a","createElement","className","id","style","fontSize","main","temp","speed","dt_txt","onClick","Component","DataRequest","getWeather","asyncToGenerator","regenerator_default","mark","_callee","city","api_call","response","wrap","_context","prev","next","state","searchedCity","fetch","concat","sent","json","setState","weatherData","list","loadAnimation","updateBackground","child","current","alert","stop","handleKeyUp","event","userInputValue","value","console","log","React","createRef","stopLoadAnimation","setDefaultCity","loaderEffect","onComplete","currentTemp","to","background","database","ref","remove","cityName","push","set","_this2","on","snap","val","setTimeout","_this3","data","type","name","placeholder","onKeyUp","el","components_datacontainer","assign","DisplayContainer","App","components_datarequest","components_displaycontainer","Boolean","window","location","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54fe3c28.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAgACtJR9aaKjdOJRuFA_JHwEsPomKy_PM\",\r\n    authDomain: \"newestprojects-2f2a7.firebaseapp.com\",\r\n    databaseURL: \"https://newestprojects-2f2a7.firebaseio.com\",\r\n    projectId: \"newestprojects-2f2a7\",\r\n    storageBucket: \"newestprojects-2f2a7.appspot.com\",\r\n    messagingSenderId: \"743452859420\"\r\n  };\r\nconst fire = firebase.initializeApp(config)\r\nexport { fire }","import React, { Component } from 'react';\r\nimport './datacontainer.css';\r\nimport { TweenMax, TimelineMax, ExpoScaleEase } from 'gsap/all';\r\n\r\nclass DataContainer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.runAnimations = this.runAnimations.bind(this);\t\r\n\t\tthis.resetAnimations = this.resetAnimations.bind(this);\r\n\t\tthis.saveCurrentCity = this.saveCurrentCity.bind(this);\r\n        this.testEffect = null;\t\t\r\n    }\r\n\t\r\n    runAnimations(){\r\n\tvar degrees = Math.round(this.props.wind.deg);\r\n\tif(degrees>0 && degrees <360)\r\n\t{\r\n\tthis.testEffect = new TimelineMax({paused:true}).add([\t\r\n\tTweenMax.fromTo(\"#current-data\",2,{opacity:0, display:'none'},{opacity:1, display:'block', delay:5, ease:ExpoScaleEase.config(1, 1.5)}),\r\n\tTweenMax.fromTo(\"#arrow\",3,{rotation:0},{rotation:degrees, delay:6.5, ease:ExpoScaleEase.config(1, 1.5)})\r\n\t]);\r\n\tthis.testEffect.play();\r\n\t}\r\n    }\r\n\t\r\n\tresetAnimations(){\r\n\t\tthis.testEffect.reverse();\r\n\t\tthis.props.sendOrderToParent();\r\n\t}\r\n\t\r\n\tsaveCurrentCity(){\r\n\t\tthis.props.saveAsDefault();\r\n\t}\r\n\t\r\n    render(){\r\n        return(\r\n\t\t<div className=\"current-d\" id=\"current-data\">\r\n\t\t<h3 style={{fontSize:'25px'}}>{Math.round((this.props.main.temp) - 273.15)}<span>&#8451;</span></h3>\r\n\t\t<p>Wind: {this.props.wind.speed} m/s <i className=\"fa fa-arrow-circle-up\" id=\"arrow\"></i></p>\r\n\t\t<p> {this.props.dt_txt} </p>\r\n\t\t<br />\r\n\t\t<button className=\"save-button\" onClick={this.resetAnimations}>Reset</button>\r\n\t\t<button className=\"save-button\" onClick={this.saveCurrentCity}>Save</button>\r\n\t\t</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataContainer;","import React from 'react';\r\nimport { TweenMax, TimelineMax, ExpoScaleEase } from 'gsap/all';\r\nimport { fire } from './config/config';\r\nimport DataContainer from './datacontainer';\r\nimport './datarequest.css';\r\n\r\nclass DataRequest extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = { weatherData : null, searchedCity : null };\r\n\tthis.child = React.createRef();\r\n\tthis.getWeather = this.getWeather.bind(this);\r\n\tthis.handleKeyUp = this.handleKeyUp.bind(this);\r\n\tthis.updateBackground = this.updateBackground.bind(this);\r\n\tthis.loadAnimation = this.loadAnimation.bind(this);\r\n\tthis.stopLoadAnimation = this.stopLoadAnimation.bind(this);\r\n\tthis.saveCurrentCity = this.saveCurrentCity.bind(this);\r\n\tthis.setDefaultCity = this.setDefaultCity.bind(this);\r\n\tthis.loaderEffect = null;\r\n}\t\r\n\t\r\ncomponentDidMount(){\r\n   this.loaderEffect = new TimelineMax({paused:true}).add([\t\r\n      TweenMax.fromTo(\"#loader-text\",2,{opacity:0},{opacity:1, onComplete:this.stopLoadAnimation, ease:ExpoScaleEase.config(1, 1.5)})\r\n   ]);\r\n   this.setDefaultCity();\r\n}\t\r\n\r\ngetWeather = async () => {\r\n  var userId = 'd54a93e8b3442f2fa76cb872ad7e6606';\r\n  if(this.state.searchedCity)\r\n  {\r\n  var city = this.state.searchedCity;\r\n  const api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=${userId}`);\r\n  const response = await api_call.json();\r\n  \r\n  this.setState({weatherData: response.list[0]});\r\n  this.loadAnimation();\r\n  this.updateBackground();  \r\n  this.child.current.runAnimations();  \r\n  }\r\n  else {alert(\"Please type searched city\");}  \r\n}\r\n\r\nhandleKeyUp = (event) => {\t\r\n\tthis.setState({searchedCity : this.userInputValue.value},()=> { \r\n    console.log(this.state.searchedCity)});\r\n}\r\n\r\nupdateBackground(){\r\n\tvar currentTemp = Math.round((this.state.weatherData.main.temp) - 273.15);\r\n\r\n\tif(currentTemp <= -15) {TweenMax.to(\"#data-b\",10,{background: 'linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(0,0,255,0.75) 60%)', delay:2, ease:ExpoScaleEase.config(1, 1.5)}); }\r\n\telse if(currentTemp < 0) {TweenMax.to(\"#data-b\",10,{background: 'linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(0,0,125,0.75) 60%)', delay:2, ease:ExpoScaleEase.config(1, 1.5)}); }\r\n\telse if(currentTemp < 15) {TweenMax.to(\"#data-b\",10,{background: 'linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(125,0,0,0.75) 60%)', delay:2, ease:ExpoScaleEase.config(1, 1.5)}); }\r\n\telse if(currentTemp >= 15) {TweenMax.to(\"#data-b\",10,{background: 'linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(255,0,0,0.75) 60%)', delay:2, ease:ExpoScaleEase.config(1, 1.5)}); }\r\n}\r\n\r\nloadAnimation(){\r\n\tthis.loaderEffect.play();\r\n}\r\n\r\nstopLoadAnimation(){\r\n\tthis.loaderEffect.reverse();\r\n\tthis.userInputValue.value = null;\r\n}\r\n\r\nsaveCurrentCity(){\r\n\t    if(this.state.searchedCity)\r\n\t\t{\r\n\t    const database = fire.database().ref().child('savedcities');\r\n\t\tdatabase.remove();\r\n\t\tvar cityName = this.state.searchedCity;\r\n\t\tdatabase.push().set({ cityName });\r\n\t\t}\r\n}\r\n\r\nsetDefaultCity(){\r\n\tconst db = fire.database().ref().child('savedcities');\r\n\tdb.on('child_added', snap => {\r\n\t\t    console.log(snap.val().cityName);\r\n\t\t\tthis.setState({searchedCity: snap.val().cityName});\r\n      })\r\n\tsetTimeout(this.getWeather,3000);\r\n}\r\n\t\r\nrender(){\r\n\tvar data = this.state.weatherData;\r\n\treturn(\r\n\t <div className=\"data-block\" id=\"data-b\">\r\n        Your latest city: {this.state.searchedCity}\t\t\r\n\t\t<br /><br />\r\n\t\t<p>Search for city: </p>\r\n\t\t<input className=\"custom-input\" type=\"text\" name=\"search\" placeholder=\"Search...\" onKeyUp={this.handleKeyUp} ref={el => this.userInputValue=el} />\r\n\t\t<button className=\"custom-button\" onClick={this.getWeather}><i className=\"fa fa-search\"></i> SEARCH</button>\t\t\r\n\t\t{this.state.weatherData &&\r\n\t\t<DataContainer ref={this.child} sendOrderToParent={this.stopLoadAnimation} saveAsDefault={this.saveCurrentCity} {...data}/>\r\n\t\t}\r\n\t\t<div className=\"loader-block\" id=\"loader-text\">\r\n\t\t<div className=\"lds-ripple\" id=\"loader\"><div></div><div></div></div>\r\n\t    </div>\r\n     </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DataRequest;","import React, { Component } from 'react';\r\nimport './displaycontainer.css';\r\n\r\nclass DisplayContainer extends Component{\r\n\t\r\n    render(){\r\n        return(\r\n\t\t<div className=\"display-block\">\r\n\t\tPLACEHOLDER CONTAINER FOR DISPLAY\r\n\t\t</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayContainer;","import React, { Component } from 'react';\nimport './App.css';\nimport DataRequest from './components/datarequest';\nimport DisplayContainer from './components/displaycontainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h3 className=\"custom-header\">CURRENT WEATHER APP</h3>\n\t\t<DataRequest />\n\t\t<DisplayContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Shrikhand', 'cursive', 'UnifrakturMaguntia', 'cursive', 'Sedgwick Ave Display', 'cursive']\n  }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}